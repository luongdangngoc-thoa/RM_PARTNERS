{{ 'section-contact-form.css' | asset_url | stylesheet_tag }}


{%- style -%}
.section-{{ section.id }}-padding {
padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
}

.contact_name {
  width: 100%;
}

.input-name-wrap .contact_name input {
  width: 100% !important;
}


@media screen and (min-width: 750px) {
.section-{{ section.id }}-padding {
padding-top: {{ section.settings.padding_top }}px;
padding-bottom: {{ section.settings.padding_bottom }}px;
}
}

 /* remove defaul setting*/
  .field.contact textarea:focus {
    outline-offset: 0 !important;
  }

  .field.contact textarea:focus {
    box-shadow: unset !important;
    outline: unset !important;
    border-radius: unset !important;
  }

  .field.contact textarea:focus-visible {
    box-shadow: unset !important;
    outline: unset !important;
    outline-offset: unset !important;
    border-radius: unset !important;
  }

  /* remove defaul setting end*/
  
.contact__button {
margin-top: 4rem;
text-align: center;
}
.contact__button .button {
color: #333;
background-color: initial;
}
.contact .field__label.contact {
position: relative;
left: 0;
top: 0;
width: 30%;
}

.field.contact {
 align-items: center;
}
.field.contact span {
font-size: 0.8em;
margin-left: 1em;
padding: 0.2rem 0.5rem;
}
.field.contact .inquiry {
font-size: 0.8em;
padding: 0.2rem 0.5rem;
}
.contact .field__input {
width: 70%;
}
.contact .field__input.inquiry {
padding-bottom: 0;
-webkit-appearance: auto;
*/ appearance: auto;
width: 70%
}
.contact .input-contact-wrap {
flex: 1;
}
.input-name-wrap {
display: flex;
gap: 3rem;
justify-content: space-between;
width: 70%;
}
.contact .input-contact-wrap input {
display: flex;
}
.contact .input-contact-wrap .field__input {
width: 100%;
}
.contact .input-name-wrap .contact_name input {
display: flex;
}
  
.field__label.contact span {
border: 1px solid;
font-size: 1.2rem;
}
.contact .field__label {
position: initial;
}
.error-message {
margin: 0 ;
color: var(--error, #FF3535);
font-family: Noto Serif JP;
font-size: 1.2rem;
font-style: normal;
font-weight: 400;
letter-spacing: 0.6px;
display: none;
}
.error-message.inquiry {
color: var(--error, #FF3535);
font-family: Noto Serif JP;
font-size: 1.2rem;
font-style: normal;
font-weight: 400;
letter-spacing: 0.6px;
}

.input-textarea-wrap {
  margin-top: 3rem;
  width: 70%;
  display: flex;
  flex-direction: column;
}

.input-textarea-wrap textarea {
  padding: 0;
  margin: 0;
}

.input-textarea-wrap .error-message {
  margin-top: -2.5rem;
}
  
  
.field__input::placeholder,
.customer .field input::placeholder {
opacity: 0.8;
}
  
.contact.field input::placeholder {
    font-size: 1.4rem;
    font-family: Noto Serif JP;
}

  
.field__checkbox_contact {
display: flex;
padding-left:30%;
}

.field__checkbox_contact a {
  line-height: 1.5;
}
.contact_checkbox_error {
display: flex;
padding-left:30%;
}
.checkbox_href {
color: var(--primary, #333);
font-family: Noto Serif JP;
font-size: 1.6rem;
font-style: normal;
font-weight: 400;
letter-spacing: 0.8px;
}
  
#ContactForm-agree {
  width: 1.8rem;
  height: 1.8rem;
  margin-bottom: 0;
}
@media screen and (max-width: 750px) {
.field {
position: relative;
width: 100%;
display: block;
transition: box-shadow var(--duration-short) ease;
}
  
.input-textarea-wrap {
  width: 100%;
}
  
.text-area {
  width: 100%;
}
  
.input-name-wrap {
  width: 100%;
}

.contact .field__input {
width: 100%;
}

.contact .field__label.contact {
width: 100%;
}

.field__label.contact span {
  padding: 0.2rem;
  font-size: 1rem;
  margin-left: 0.4rem;
}

.field__label.contact {
  font-size: 1.6rem;
}

.field__checkbox_contact .field__label {
  font-size: 1.6rem;
}

.field__checkbox_contact a {
  line-height: 1.5;
}

.field__checkbox_contact {
display: flex;
padding-left:0%;
}

.contact_checkbox_error {
display: flex;
padding-left:0 ;
}
textarea::placeholder {
/* Modern browsers */
color: transparent;
}

.contact.field input::placeholder {
    font-size: 1rem;
    font-family: Noto Serif JP;
  }
}

#ContactForm-agree {
  width: 1.6rem;
  height: 1.6rem;
}

@media screen and (max-width: 820px) and (min-width: 749px) {
.field__label.contact span {
  padding: 0.2rem;
  font-size: 1rem;
  margin-left: 0.4rem;
}
}


{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="contact page-width page-width-tablet section-{{ section.id }}-padding">
    {%- if section.settings.heading != blank -%}
    <h2
      class="title title-wrapper--no-top-margin inline-richtext {{ section.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      {{ section.settings.heading }}
    </h2>
    {%- else -%}
    <h2 class="visually-hidden">{{ 'templates.contact.form.title' | t }}</h2>
    {%- endif -%}
    {%- liquid
    assign contact_form_class = 'isolate'
    if settings.animations_reveal_on_scroll
    assign contact_form_class = 'isolate scroll-trigger animate--slide-in'
    endif
    -%}
    {%- form 'contact'
    , id: 'ContactForm'
    , class: contact_form_class -%}
    {%- if form.posted_successfully? -%}
    <script>
      window.location = 'contact-thanks';
    </script>
    {%- endif -%}
    {% comment %} 問い合わせ内容 {% endcomment %}
    <div class="field contact">
      <label class="field__label contact " for="ContactForm-inquiry">
        {{- 'templates.contact.form.inquiry' | t -}}
        <span aria-hidden="true">必須</span>
      </label>
      <div class="input-contact-wrap">
        <select id="Inquiry" class="field__input inquiry{% if form.errors contains 'inquiry' %} error{% endif %}" {% if
          form.inquiry %} value="{{ form.inquiry }}" {% endif %} name="contact[inquiry]" placeholder="お問い合わせ内容を選択">
          <option value=""></option>
          <option value="購入を検討している">購入を検討している</option>
          <option value="店頭で見てみたい">店頭で見てみたい</option>
          <option value="その他お問い合せ">その他お問い合せ</option>
        </select>
        <p class="error-message inquiry" id="inquiryError">選択されていません</p>
      </div>
    </div>
    {% comment %} 名前 {% endcomment %}
    <div class="field contact">
      <label class="field__label contact" for="ContactForm-name">
        {{- 'templates.contact.form.name' | t }}
        <span aria-hidden="true">必須</span>
      </label>
      <div class="input-name-wrap">
        <div class="contact_name">
          <input type="text" name="contact[first_name]" id="FirstName"
            class="field__input{% if form.errors contains 'first_name' %} error{% endif %}" {% if form.first_name %}
            value="{{ form.first_name }}" {% endif %} placeholder="姓（全角）">
          <p class="error-message" id="firstNameError">正しく入力されていません</p>
        </div>

        <div class="contact_name">
          <input type="text" name="contact[last_name]" id="LastName"
            class="field__input{% if form.errors contains 'last_name' %} error{% endif %}" {% if form.last_name %}
            value="{{ form.last_name }}" {% endif %} autocapitalize="words" placeholder="名（全角）">
          <p class="error-message" id="lastNameError">正しく入力されていません</p>
        </div>
      </div>
    </div>
    {% comment %} メールアドレス {% endcomment %}
    <div class="field contact">
      <label class="field__label contact" for="ContactForm-email">
        {{- 'templates.contact.form.email' | t }}
        <span aria-hidden="true">必須</span>
      </label>
      <div class="input-contact-wrap">
        <input autocomplete="email" type="email" id="Email"
          class="field__input{% if form.errors contains 'email' %} error{% endif %}" {% if form.email %}
          value="{{ form.email }}" {% endif %} name="contact[email]" placeholder="〇〇〇〇〇〇〇〇@〇〇.〇〇">
        <p class="error-message" id="emailError">正しく入力されていません</p>
      </div>
    </div>
    {% comment %} お問い合わせ内容 {% endcomment %}
    <div class="field contact">
      <label class="form__label contact field__label" for="ContactForm-body">
        {{- 'templates.contact.form.comment' | t }}
        <span aria-hidden="true">必須</span>
      </label>
      <div class="input-textarea-wrap">
      <textarea required rows="10" id="ContactForm-body" class="text-area " aria-required="true"
        name="contact[{{ 'templates.contact.form.comment' | t }}]"
        placeholder="{{ 'templates.contact.form.comment_placeholder' | t }}">
          {{- form.body -}}
        </textarea>
      　 <p class="error-message" id="bodyError">入力されていません</p>
      </div>
    </div>
    <div class="input-contact-wrap">
      <div class="field__checkbox_contact">
        <input type="checkbox" id="ContactForm-agree" aria-required="true" class="field__checkbox"
          name="contact[個人情報取り扱い同意]">
        <a href="https://rm-partners.myshopify.com/pages/policy" class="checkbox_href">個人情報の取扱</a>
        <label class="field__label" for="ContactForm-agree">
          {{- 'templates.contact.form.checkbox' | t }}
        </label>
      </div>
      <div class="contact_checkbox_error">
        <p class="error-message" id="checkBoxError">チェックが入っていません</p>
      </div>
    </div>
    <div class="contact__button">
      <button type="submit" id="submitButton" class="button" onclick="validate()">
        {{ 'templates.contact.form.send' | t }}
      </button>
    </div>
    {%- endform -%}
  </div>
</div>
<script>
  function validateInput(input, errorElement) {
    if (input.value.trim() === '') {
      errorElement.style.display = 'block';
      return false;
    } else {
      errorElement.style.display = 'none';
      return true;
    }
  }

  function validateCheckbox(checkbox, errorElement) {
    if (!checkbox.checked) {
      errorElement.style.display = 'block';
      return false;
    } else {
      errorElement.style.display = 'none';
      return true;
    }
  }

  function validateMail(input, errorElement) {
    const mailformat = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
    if (!input.value.match(mailformat) || input.value.trim() === '') {
      errorElement.style.display = 'block';
      return false;
    } else {
      errorElement.style.display = 'none';
      return true;
    }
  }

  //必須の問い合わせ内容(required inquiry)
  const inquiryInput = document.getElementById('Inquiry');
  const inquiryError = document.getElementById('inquiryError');
  //必須の名前(required name)
  const firstNameInput = document.getElementById('FirstName');
  const lastNameInput = document.getElementById('LastName');
  const firstNameError = document.getElementById('firstNameError');
  const lastNameError = document.getElementById('lastNameError');
  //必須のメール(required email)
  const emailInput = document.getElementById('Email');
  const emailError = document.getElementById('emailError');
  //必須のチェックボックス(required checkbox)
  const checkBox = document.getElementById('ContactForm-agree');
  const checkBoxError = document.getElementById('checkBoxError');
  //必須の問い合わせ内容(required textarea)
  const bodyTextarea = document.getElementById('ContactForm-body');
  const bodyError = document.getElementById('bodyError');
  // Button submit
  const submitButton = document.getElementById('submitButton');

  submitButton.addEventListener('click', function (event) {
    const isInquiryValid = validateInput(inquiryInput, inquiryError);
    const isFirstNameValid = validateInput(firstNameInput, firstNameError);
    const isLastNameValid = validateInput(lastNameInput, lastNameError);
    const isCheckBoxValid = validateCheckbox(checkBox, checkBoxError);
    const isContactBodyValid = validateInput(bodyTextarea, bodyError);
    const isEmailValidTest = validateMail(emailInput, emailError);

    if (!isInquiryValid || !isFirstNameValid || !isLastNameValid || !isCheckBoxValid || !isContactBodyValid || !isEmailValidTest) {
      event.preventDefault(); // Prevent form submission if any validation fails
    }
  });
</script>

{% schema %}
{
"name": "t:sections.contact-form.name",
"tag": "section",
"class": "section",
"disabled_on": {
"groups": ["header", "footer"]
},
"settings": [
{
"type": "inline_richtext",
"id": "heading",
"default": "Contact form",
"label": "Heading"
},
{
"type": "select",
"id": "heading_size",
"options": [
{
"value": "h2",
"label": "t:sections.all.heading_size.options__1.label"
}, {
"value": "h1",
"label": "t:sections.all.heading_size.options__2.label"
}, {
"value": "h0",
"label": "t:sections.all.heading_size.options__3.label"
}
],
"default": "h1",
"label": "t:sections.all.heading_size.label"
},
{
"type": "color_scheme",
"id": "color_scheme",
"label": "t:sections.all.colors.label",
"default": "background-1"
},
{
"type": "header",
"content": "t:sections.all.padding.section_padding_heading"
}, {
"type": "range",
"id": "padding_top",
"min": 0,
"max": 100,
"step": 4,
"unit": "px",
"label": "t:sections.all.padding.padding_top",
"default": 36
}, {
"type": "range",
"id": "padding_bottom",
"min": 0,
"max": 100,
"step": 4,
"unit": "px",
"label": "t:sections.all.padding.padding_bottom",
"default": 36
}
],
"presets": [
{
"name": "t:sections.contact-form.presets.name"
}
]
}
{% endschema %}